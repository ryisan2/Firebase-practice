{"ast":null,"code":"var _jsxFileName = \"/Users/ryisan/Desktop/firebase-practice/src/App.js\";\nimport './App.css';\nimport { auth } from './firebase/init';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  function register() {\n    console.log(\"Registering\");\n    createUserWithEmailAndPassword(auth, 'email@email.com', \"test1234\").then(user => {\n      // Signed up \n      console.log(user);\n    }).catch(error => {\n      console.log(error);\n    });\n\n    // the above was done via hardcoding but you cannot hardcode shit so we are going to use hooks instead\n\n    //  below is how it should be done using dynamic coding with a const [email, setEmail] which would be set by the input function\n    //  function register () {\n    //   const [email, setEmail]\n    //     console.log(\"Registering\");\n    //     createUserWithEmailAndPassword( auth, 'email@email.com', \"test1234\")\n    //   .then((user) => {\n    //     // Signed up \n    //   console.log(user);\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //   });\n    // for now we are going to use hardcoding to show how it can be done first for the login function\n\n    function Login() {\n      console.log(\"logging in\");\n      signInWithEmailAndPassword(auth, 'email@email.com', \"test1234\").then(user => {\n        // Signed up \n        console.log(user);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: register,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this);\n  }\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","jsxDEV","_jsxDEV","App","register","console","log","then","user","catch","error","Login","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryisan/Desktop/firebase-practice/src/App.js"],"sourcesContent":["import './App.css';\nimport { auth } from './firebase/init';\nimport {createUserWithEmailAndPassword, \n  signInWithEmailAndPassword } \n  from \"firebase/auth\";\n\nfunction App() {\n  function register () {\n    console.log(\"Registering\");\n    createUserWithEmailAndPassword( auth, 'email@email.com', \"test1234\")\n  .then((user) => {\n    // Signed up \n  console.log(user);\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n  \n// the above was done via hardcoding but you cannot hardcode shit so we are going to use hooks instead\n\n//  below is how it should be done using dynamic coding with a const [email, setEmail] which would be set by the input function\n//  function register () {\n//   const [email, setEmail]\n//     console.log(\"Registering\");\n//     createUserWithEmailAndPassword( auth, 'email@email.com', \"test1234\")\n//   .then((user) => {\n//     // Signed up \n//   console.log(user);\n//   })\n//   .catch((error) => {\n//     console.log(error);\n//   });\n// for now we are going to use hardcoding to show how it can be done first for the login function\n\n\nfunction Login() {\n  console.log(\"logging in\")\n signInWithEmailAndPassword ( auth, 'email@email.com', \"test1234\")\n .then((user) => {\n   // Signed up \n console.log(user);\n })\n .catch((error) => {\n   console.log(error);\n });\n}\n\n  \n  return (\n    <div className=\"App\">\n    <button onClick={register}>Register</button>\n    <button onClick={Login}>Login</button>\n    </div>\n  );\n}\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,SAASA,IAAI,QAAQ,iBAAiB;AACtC,SAAQC,8BAA8B,EACpCC,0BAA0B,QACrB,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,GAAGA,CAAA,EAAG;EACb,SAASC,QAAQA,CAAA,EAAI;IACnBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BP,8BAA8B,CAAED,IAAI,EAAE,iBAAiB,EAAE,UAAU,CAAC,CACrES,IAAI,CAAEC,IAAI,IAAK;MACd;MACFH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;IACjB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IACpB,CAAC,CAAC;;IAEJ;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA,SAASC,KAAKA,CAAA,EAAG;MACfN,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAC1BN,0BAA0B,CAAGF,IAAI,EAAE,iBAAiB,EAAE,UAAU,CAAC,CAChES,IAAI,CAAEC,IAAI,IAAK;QACd;QACFH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;MACjB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;MACpB,CAAC,CAAC;IACH;IAGE,oBACER,OAAA;MAAKU,SAAS,EAAC,KAAK;MAAAC,QAAA,gBACpBX,OAAA;QAAQY,OAAO,EAAEV,QAAS;QAAAS,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5ChB,OAAA;QAAQY,OAAO,EAAEH,KAAM;QAAAE,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAEV;AACA;AAACC,EAAA,GAjDQhB,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}