{"ast":null,"code":"var _jsxFileName = \"/Users/ryisan/Desktop/firebase-practice/src/Nav.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"./firebase/init\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navigator() {\n  _s();\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      setLoading(false);\n      if (user) {\n        // User is signed in\n        setUser(user);\n      }\n    });\n  }, []); // This is a hook that runs when the component mounts\n\n  function register() {\n    console.log(\"Registering\");\n    createUserWithEmailAndPassword(auth, \"email@email.com\", \"test1234\").then(user => {\n      // Signed up\n      console.log(user);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  function login() {\n    console.log(\"Logging in\");\n    signInWithEmailAndPassword(auth, \"email@email.com\", \"test1234\").then(({\n      user\n    }) => {\n      // Signed in\n      console.log(user);\n      setUser(user);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }\n  function logout() {\n    console.log(\"Logging out\");\n    signOut(auth);\n    setUser({}); // Reset the user state\n  }\n\n  // The code above is all hard-coded, but you can easily modify it to accept user input.\n\n  const welcome = user.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email_shw\",\n    children: [\"( \", user.email, \" logged in ,welcome)\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email_shw\",\n    children: \"( logged out)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nice_btn\",\n      onClick: register,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nice_btn\",\n      onClick: login,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nice_btn\",\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), welcome, loading ? \"loading...\" : user.email]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Navigator, \"rZh6Jwd5VooHzMg08whDIVlIXGQ=\");\n_c = Navigator;\nexport default Navigator;\nvar _c;\n$RefreshReg$(_c, \"Navigator\");","map":{"version":3,"names":["React","useState","useEffect","auth","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","jsxDEV","_jsxDEV","Navigator","_s","user","setUser","loading","setLoading","register","console","log","then","catch","error","login","message","logout","welcome","email","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ryisan/Desktop/firebase-practice/src/Nav.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth } from \"./firebase/init\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\n\nfunction Navigator() {\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      setLoading(false);\n      if (user) {\n        // User is signed in\n        setUser(user);\n      }\n    });\n  }, []); // This is a hook that runs when the component mounts\n\n  function register() {\n    console.log(\"Registering\");\n    createUserWithEmailAndPassword(\n      auth,\n      \"email@email.com\",\n      \"test1234\"\n    )\n      .then((user) => {\n        // Signed up\n        console.log(user);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function login() {\n    console.log(\"Logging in\");\n    signInWithEmailAndPassword(\n      auth,\n      \"email@email.com\",\n      \"test1234\"\n    )\n      .then(({ user }) => {\n        // Signed in\n        console.log(user);\n        setUser(user);\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  }\n\n  function logout() {\n    console.log(\"Logging out\");\n    signOut(auth);\n    setUser({}); // Reset the user state\n  }\n\n  // The code above is all hard-coded, but you can easily modify it to accept user input.\n\n  const welcome = user.email ? (\n    <div className=\"email_shw\">\n      ( {user.email} logged in ,welcome)\n      {/* // Display the user's email */}\n    </div>\n  ) : (\n    <div className=\"email_shw\">( logged out)</div>\n  );\n\n  return (\n    <div className=\"App\">\n      <button className=\"nice_btn\" onClick={register}>\n        Register\n      </button>\n      <button className=\"nice_btn\" onClick={login}>\n        Login\n      </button>\n      <button className=\"nice_btn\" onClick={logout}>\n        Logout\n      </button>\n      {welcome}\n      {loading ? \"loading...\" : user.email}\n    </div>\n  );\n}\n\nexport default Navigator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,OAAO,EACPC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,kBAAkB,QACb,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdM,kBAAkB,CAACL,IAAI,EAAGU,IAAI,IAAK;MACjCG,UAAU,CAAC,KAAK,CAAC;MACjB,IAAIH,IAAI,EAAE;QACR;QACAC,OAAO,CAACD,IAAI,CAAC;MACf;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,SAASI,QAAQA,CAAA,EAAG;IAClBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1Bd,8BAA8B,CAC5BF,IAAI,EACJ,iBAAiB,EACjB,UACF,CAAC,CACEiB,IAAI,CAAEP,IAAI,IAAK;MACd;MACAK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IACnB,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEA,SAASC,KAAKA,CAAA,EAAG;IACfL,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzBb,0BAA0B,CACxBH,IAAI,EACJ,iBAAiB,EACjB,UACF,CAAC,CACEiB,IAAI,CAAC,CAAC;MAAEP;IAAK,CAAC,KAAK;MAClB;MACAK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;MACjBC,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAACE,OAAO,CAAC;IAC5B,CAAC,CAAC;EACN;EAEA,SAASC,MAAMA,CAAA,EAAG;IAChBP,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BZ,OAAO,CAACJ,IAAI,CAAC;IACbW,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACf;;EAEA;;EAEA,MAAMY,OAAO,GAAGb,IAAI,CAACc,KAAK,gBACxBjB,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,GAAC,IACvB,EAAChB,IAAI,CAACc,KAAK,EAAC,sBACd;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC,gBAENvB,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAC;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAC9C;EAED,oBACEvB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAQkB,SAAS,EAAC,UAAU;MAACM,OAAO,EAAEjB,QAAS;MAAAY,QAAA,EAAC;IAEhD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTvB,OAAA;MAAQkB,SAAS,EAAC,UAAU;MAACM,OAAO,EAAEX,KAAM;MAAAM,QAAA,EAAC;IAE7C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTvB,OAAA;MAAQkB,SAAS,EAAC,UAAU;MAACM,OAAO,EAAET,MAAO;MAAAI,QAAA,EAAC;IAE9C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRP,OAAO,EACPX,OAAO,GAAG,YAAY,GAAGF,IAAI,CAACc,KAAK;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV;AAACrB,EAAA,CA/EQD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAiFlB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}